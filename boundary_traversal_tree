class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {

        map<int,vector<int>> m;
        queue<pair<int,TreeNode*>> q;
        q.push(make_pair(0,root));
        while(!q.empty())
        {
            set<pair<int,int>> tmp;
            int len=q.size();
            for(int i=0;i<len;++i)
            {
                auto p=q.front();
                q.pop();
                tmp.insert(make_pair(p.first,p.second->val));
                if(p.second->left)
                q.push(make_pair(p.first-1,p.second->left));
                if(p.seconde->right)
                q.push(make_pair(p.first+1,p.seconde->right));

            }
            for(auto p:tmp)
            m[p.first].push_back(p.second);
        }

        vector<vector<int> > res;
        for(auto kv : m)
        res.push_back(kv.second);
        return res; 
        
    }
};
